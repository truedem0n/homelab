# backup 
---
- name: Update and upgrade Ubuntu packages locally
  hosts: localhost
  connection: local
  become: yes
  gather_facts: yes

  vars:
    git_repo_url: "https://github.com/truedem0n/homelab.git"
    ansible_playbook_path: "prod/ansible/lxc/dr.yml"
    ansible_flag_path: "/ansible/ansible_first_run.flag"
    restic_lib_path: "/var/lib/restic"
    files:
      - path: "{{ restic_lib_path }}/restic-env"
      - path: "{{ restic_lib_path }}/restic-password"

  tasks:
    - name: Install packages
      apt:
        name:
          - restic
        state: present

    - name: Check if the flag file exists
      stat:
        path: "{{ ansible_flag_path }}"
      register: flag_file

    - name: Create a file with content
      copy:
        content: |
          export AWS_ACCESS_KEY_ID=<B2_KEY_ID>
          export AWS_SECRET_ACCESS_KEY=<B2_ApplicationKey>
          export RESTIC_REPOSITORY="s3:s3.us-west-002.backblazeb2.com/s3restic2023"
          export RESTIC_PASSWORD_FILE={{ restic_lib_path }}/restic-password
        dest: "{{ restic_lib_path }}/restic-env"
        mode: 0644
      when: flag_file.stat.exists == false

    - name: Create the flag file
      file:
        path: "{{ restic_lib_path }}/restic-password"
        state: touch
      when: flag_file.stat.exists == false
  
    - name: Create the flag file
      file:
        path: "{{ ansible_flag_path }}"
        state: touch
      when: flag_file.stat.exists == false

    - name: Schedule playbook to run every hour
      cron:
        name: "Run b2 backup playbook every 5 minutes with logging"
        job: "/usr/bin/ansible-playbook /mnt/data/ansible/homelab/prod/ansible/lxc/dr.yml > /var/log/ansible-backup.log 2>&1"
        special_time: "hourly"
        state: present

    - name: Schedule playbook to run at reboot with logging
      cron:
        name: "Run b2 backup playbook at reboot with logging"
        job: "/usr/bin/ansible-playbook /mnt/data/ansible/homelab/prod/ansible/lxc/dr.yml > /var/log/ansible-backup.log 2>&1"
        special_time: "reboot"
        state: present

    - name: Change ownership and permissions of files
      loop: "{{ files }}"
      file:
        path: "{{ item.path }}"
        owner: root
        group: root
        mode: 0700

    - name: Load restic environment variables
      ansible.builtin.include_vars:
        file: "{{ restic_lib_path }}/restic-env"
        name: restic_env

    # - name: Create restic b2 services backup 
    #   shell: restic -r b2:locallab:/ init
    #   args:
    #     executable: /bin/bash

    - name: Run restic services B2 backup 
      shell: /usr/bin/restic -r b2:locallab backup /mnt/data/docker/services/
      args:
        executable: /bin/bash
      environment: "{{ restic_env }}"
      register: restic_b2_output

    - name: Print restic backup output
      debug:
        var: restic_b2_output
    
    - name: Run restic services local backup 
      shell: /usr/bin/restic -r ~/nuc_nfs/backups/restic-backup/ backup /mnt/data/docker/ --password-file ~/restic_p
      args:
        executable: /bin/bash
      register: restic_local_output

    - name: Print restic backup output
      debug:
        var: restic_local_output
      

