# /usr/bin/ansible-pull -U https://github.com/truedem0n/homelab.git prod/ansible/playbooks/docker.yml
---
- name: Install Docker
  hosts: localhost
  connection: local
  become: true
  gather_facts: true

  vars:
    git_repo_url: "https://github.com/truedem0n/homelab.git"
    ansible_playbook_path: "prod/ansible/playbooks/docker.yml"

  tasks:
    - name: Create /etc/apt/keyrings directory
      ansible.builtin.file:
        path: /etc/apt/keyrings
        state: directory
        mode: "0755"
      when: ansible_distribution == 'Debian'

    - name: Download Docker GPG key
      ansible.builtin.get_url:
        url: https://download.docker.com/linux/debian/gpg
        dest: /etc/apt/keyrings/docker.asc
        mode: "0644"
      when: ansible_distribution == 'Debian'

    - name: Get distribution codename
      ansible.builtin.command:
        cmd: lsb_release -cs
      register: dist_codename
      when: ansible_distribution == 'Debian'

    - name: Add Docker repository to Apt sources
      ansible.builtin.lineinfile:
        path: /etc/apt/sources.list.d/docker.list
        line: "deb [arch=amd64 signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/debian {{ dist_codename.stdout }} stable"
        create: true
      when: ansible_distribution == 'Debian'

    - name: Update apt cache again
      ansible.builtin.apt:
        update_cache: true
      when: ansible_distribution == 'Debian'
    
    - name: Create required directories
      file:
        path: "{{ item }}"
        state: directory
        mode: '0755'
        recurse: yes
      loop:
        - /etc/docker/
    
    - name: Configure Docker daemon
      copy:
        content: |
          {
            "hosts": ["tcp://0.0.0.0:2375", "unix:///var/run/docker.sock"]
          }
        dest: /etc/docker/daemon.json
        mode: '0644'

    - name: Install Docker packages
      ansible.builtin.apt:
        name:
          - docker-ce
          - docker-ce-cli
          - containerd.io
          - docker-buildx-plugin
          - docker-compose-plugin
        state: present
      when: ansible_distribution == 'Debian'

    - name: Install additional packages
      ansible.builtin.apt:
        name:
          - nfs-common
          - nfs4-acl-tools
        state: present
      when: ansible_distribution == 'Debian'

    - name: Install base packages
      ansible.builtin.package:
        name:
          - ca-certificates
          - docker
          - docker-cli
          - docker-compose
        state: present
      when: ansible_distribution != 'Debian'

    - name: Schedule Docker system prune
      ansible.builtin.cron:
        name: "Run Docker system prune with logging"
        job: "/usr/bin/docker system prune -af > /var/log/docker-prune.log 2>&1"
        special_time: "daily"
        state: present

    - name: Ensure Docker is active
      ansible.builtin.service:
        name: docker
        state: started
        enabled: true
