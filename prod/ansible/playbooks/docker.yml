# /usr/bin/ansible-pull -U https://github.com/truedem0n/homelab.git prod/ansible/playbooks/docker.yml
# Playbook based on Docker documentation: https://docs.docker.com/engine/install/ubuntu/#install-using-the-repository
---
- name: Install Docker on Debian/Ubuntu
  hosts: localhost
  connection: local
  become: true
  gather_facts: true # Ensure facts are gathered

  vars:
    # Define the user who should be able to run docker without sudo
    user_to_add_to_docker_group: "{{ ansible_env.SUDO_USER | default(ansible_user) }}"
    # Path for the GPG key (ASCII armored)
    docker_gpg_key_path: "/etc/apt/keyrings/docker.asc"
    # Map Ansible architecture names to Docker repository names if needed
    docker_apt_arch: "{{ 'arm64' if ansible_architecture == 'aarch64' else 'amd64' if ansible_architecture == 'x86_64' else ansible_architecture }}"
    # Get distribution codename (fallback logic similar to the shell command)
    # ansible_lsb.codename should usually work on Ubuntu/Debian derivatives
    # If not, you might need more complex fact gathering or manual override
    distribution_codename: "{{ ansible_lsb.codename }}"

  tasks:
    - name: Update apt cache before starting
      ansible.builtin.apt:
        update_cache: yes
        cache_valid_time: 3600 # Avoid unnecessary updates
      tags: [docker, install, prerequisites]

    - name: Install prerequisite packages for Docker repository
      ansible.builtin.apt:
        name:
          - ca-certificates
          - curl
          # gnupg is good practice although not explicitly listed in this exact sequence
          # but often needed for key management or troubleshooting
          - gnupg
          # lsb-release might be needed if ansible_lsb.codename isn't populated by default
          - lsb-release
        state: present
      tags: [docker, install, prerequisites]

    # --- Set up Docker's apt repository ---

    - name: Create directory for apt keyrings
      ansible.builtin.file:
        path: "{{ docker_gpg_key_path | dirname }}" # /etc/apt/keyrings
        state: directory
        mode: '0755' # As per 'install -m 0755 -d'
      tags: [docker, install, prerequisites]

    - name: Add Docker's official GPG key (ASCII)
      ansible.builtin.get_url:
        url: https://download.docker.com/linux/ubuntu/gpg
        dest: "{{ docker_gpg_key_path }}"
        mode: '0644' # Corresponds to 'a+r' but is more specific/standard
        force: true # Ensure the latest key is downloaded
      tags: [docker, install, prerequisites]
      # Note: The documentation uses `chmod a+r`, which is world-readable (0644).
      # get_url sets permissions directly.

    - name: Add Docker APT repository to sources list
      ansible.builtin.apt_repository:
        repo: >-
          deb [arch={{ docker_apt_arch }} signed-by={{ docker_gpg_key_path }}]
          https://download.docker.com/linux/ubuntu
          {{ distribution_codename }}
          stable
        state: present
        filename: docker # Creates /etc/apt/sources.list.d/docker.list
        update_cache: yes # Run apt update after adding the repo
      tags: [docker, install, prerequisites]
      # This replaces the echo | tee command using the preferred Ansible module.

    # --- Install Docker packages ---

    - name: Install Docker Engine, CLI, Containerd, and plugins
      ansible.builtin.apt:
        name:
          - docker-ce           # Docker Engine
          - docker-ce-cli       # Docker Command Line Interface
          - containerd.io       # Container Runtime
          - docker-buildx-plugin # Buildx plugin
          - docker-compose-plugin # Docker Compose V2 plugin
        state: present
        # update_cache: yes # Already done by apt_repository, but doesn't hurt
      tags: [docker, install, core]

    # --- Post-installation steps (Optional but Recommended) ---

    - name: Ensure docker group exists
      ansible.builtin.group:
        name: docker
        state: present
      tags: [docker, config]

    - name: Add specified user to the docker group
      ansible.builtin.user:
        name: "{{ user_to_add_to_docker_group }}"
        groups: docker
        append: yes # Important: do not remove existing groups
      when: user_to_add_to_docker_group is defined and user_to_add_to_docker_group != "" and user_to_add_to_docker_group != "root"
      tags: [docker, config]
      notify: Inform user about group change

    - name: Ensure Docker service is started and enabled at boot
      ansible.builtin.systemd:
        name: docker
        state: started
        enabled: yes
      tags: [docker, service]

  handlers:
    - name: Inform user about group change
      ansible.builtin.debug:
        msg: "User '{{ user_to_add_to_docker_group }}' was added to the 'docker' group. You may need to log out and log back in for this change to take effect."