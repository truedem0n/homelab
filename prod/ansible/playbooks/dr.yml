# backup 
# /usr/bin/ansible-pull -U https://github.com/truedem0n/homelab.git prod/ansible/playbooks/dr.yml
---
- name: DR
  hosts: localhost
  connection: local
  become: true
  gather_facts: true

  vars:
    git_repo_url: "https://github.com/truedem0n/homelab.git"
    ansible_playbook_path: "prod/ansible/playbooks/dr.yml"
    ansible_flag_path: "/ansible/restic.flag"
    restic_lib_path: "/var/lib/restic"
    ntfy_topic_file: "/root/ntfy_topic"
    files:
      - path: "{{ restic_lib_path }}/restic-env"
      - path: "{{ restic_lib_path }}/restic-password"

  tasks:
    - name: Install packages
      ansible.builtin.package:
        name:
          - restic
          - curl
          - bash
        state: present

    - name: Check if the flag file exists
      stat:
        path: "{{ ansible_flag_path }}"
      register: flag_file
    
    - name: Create required directories
      file:
        path: "{{ item }}"
        state: directory
        mode: '0755'
        recurse: yes
      loop:
        - /var/lib/restic
        - /mnt/backups
      when: flag_file.stat.exists == false

    - name: Create restic env file
      file:
        path: "{{ restic_lib_path }}/restic-env"
        state: touch
      when: flag_file.stat.exists == false

    - name: Create the restic-password file
      file:
        path: "{{ restic_lib_path }}/restic-password"
        state: touch
      when: flag_file.stat.exists == false
  
    - name: Create the flag file
      file:
        path: "{{ ansible_flag_path }}"
        state: touch
      when: flag_file.stat.exists == false

    - name: Change ownership and permissions of files
      loop: "{{ files }}"
      file:
        path: "{{ item.path }}"
        owner: root
        group: root
        mode: 0700
      when: flag_file.stat.exists == false

    - name: Add secondary NFS mount to /etc/fstab
      ansible.builtin.lineinfile:
        path: /etc/fstab
        line: "192.168.1.24:/var/nfs/shared /mnt/backups nfs rw,sync,hard 0 0"
        state: present
    
    - name: Add primary NFS mount to /etc/fstab
      ansible.builtin.lineinfile:
        path: /etc/fstab
        line: "192.168.1.26:/data/ /mnt/data nfs rw,sync,hard 0 0"
        state: present
    
    - name: End play if condition is met
      meta: end_play
      when: flag_file.stat.exists == false

    - name: Load restic environment variables
      ansible.builtin.include_vars:
        file: "{{ restic_lib_path }}/restic-env"
        name: restic_env

    - name: Run restic services B2 backup 
      shell: /usr/bin/restic -r b2:locallab backup --exclude=/mnt/data/docker/pmedia --exclude=/mnt/data/docker/legacy /mnt/data/docker/
      args:
        executable: /bin/bash
      environment: "{{ restic_env }}"
      register: restic_b2_output
      ignore_errors: yes

    - name: Print restic backup output
      debug:
        var: restic_b2_output
    
    - name: Run restic services local backup 
      shell: /usr/bin/restic -r /root/nuc_nfs/backups/restic-backup/ backup /mnt/data/docker/ --password-file /root/restic_p
      args:
        executable: /bin/bash
      register: restic_local_output
      ignore_errors: yes

    - name: Print restic backup output
      debug:
        var: restic_local_output

    - name: Read ntfy topic from file
      command: cat {{ ntfy_topic_file }}
      register: ntfy_topic
      changed_when: false

    - name: Send notification on failure
      shell: >
        curl -d "Backup failed: {{ item.msg }}" ntfy.sh/{{ ntfy_topic.stdout }}
      when: item.failed
      loop:
        - "{{ restic_b2_output }}"
        - "{{ restic_local_output }}"

    - name: Schedule playbook to run daily
      cron:
        name: "Run b2 backup playbook every 5 minutes with logging"
        job: "/usr/bin/ansible-pull -U {{ git_repo_url }} {{ ansible_playbook_path }} > /var/log/ansible-dr.log 2>&1"
        special_time: "daily"
        state: present
      when: flag_file.stat.exists == true

    - name: Schedule playbook to run at reboot with logging
      cron:
        name: "Run b2 backup playbook at reboot with logging"
        job: "/usr/bin/ansible-pull -U {{ git_repo_url }} {{ ansible_playbook_path }} > /var/log/ansible-dr.log 2>&1"
        special_time: "reboot"
        state: present
      when: flag_file.stat.exists == true