---
- name: Update and upgrade Ubuntu packages locally
  hosts: localhost
  connection: local
  become: true
  gather_facts: true  # Disable gathering facts
  vars:
    git_repo_url: "https://github.com/truedem0n/homelab.git"
    ansible_playbook_path: "prod/ansible/playbook.yml"
    ansible_flag_path: "/ansible/ansible_first_run.flag"
    docker_user: "skylord"
    docker_group: "skylord"
    tailscale_install_script: "/tmp/install_tailscale.sh"
  tasks:
    - name: Update package cache
      apt:
        update_cache: yes

    - name: Upgrade all packages
      apt:
        upgrade: dist
    
    - name: Install Docker and Docker Compose
      apt:
        name:
          - docker
          - docker-compose
          - nfs-common
          - nfs4-acl-tools
        state: present

    - name: Check if the flag file exists
      stat:
        path: "{{ ansible_flag_path }}"
      register: flag_file
    
    - name: Schedule playbook to run every 5 minutes with logging
      cron:
        name: "Run Ansible playbook every 5 minutes with logging"
        job: "/usr/bin/ansible-pull -U {{ git_repo_url }} {{ ansible_playbook_path }} > /var/log/ansible-pull.log 2>&1"
        minute: "*/5"
        state: present

    - name: Schedule playbook to run at reboot with logging
      cron:
        name: "Run Ansible playbook at reboot with logging"
        job: "/usr/bin/ansible-pull -U {{ git_repo_url }} {{ ansible_playbook_path }} > /var/log/ansible-pull.log 2>&1"
        special_time: "reboot"
        state: present

    - name: Create log file for ansible-pull
      file:
        path: /var/log/ansible-pull.log
        state: touch
        owner: root
        group: root
        mode: '0644'

    - name: Disable Docker service from starting at boot
      systemd:
        name: docker
        enabled: no

    - name: Create required directories
      file:
        path: "{{ item }}"
        state: directory
        owner: "{{ docker_user }}"
        group: "{{ docker_group }}"
        mode: "0777"
        recurse: yes
      loop:
        - /ansible/
        - /mnt/data
      when: flag_file.stat.exists == false

    - name: Set permissions on the mount point directory
      file:
        path: /mnt/data
        mode: "0777"
        owner: skylord  
        group: skylord  
      when: flag_file.stat.exists == false

    - name: Deploy Dockge Container
      docker_container:
        name: dockge
        image: louislam/dockge:1
        state: started
        restart_policy: unless-stopped
        detach: yes
        ports:
          - "5001:5001"
        volumes:
          - /var/run/docker.sock:/var/run/docker.sock
          - /mnt/data/docker/containers/dockge/app/data:/app/data
          - /mnt/data/docker/compose:/mnt/data/docker/compose
        env:
          DOCKGE_STACKS_DIR: /mnt/data/docker/compose

    - name: Add NFS mount to /etc/fstab
      ansible.builtin.lineinfile:
        path: /etc/fstab
        line: "192.168.1.30:/share/ /mnt/data nfs rw,sync,hard 0 0"
        state: present


    - name: Start Docker service
      systemd:
        name: docker
        state: started

    - name: Download Tailscale installation script
      get_url:
        url: "https://tailscale.com/install.sh"
        dest: "{{ tailscale_install_script }}"
        mode: '0755'
      when: flag_file.stat.exists == false

    - name: Run the Tailscale installation script
      command: "{{ tailscale_install_script }}"
      when: flag_file.stat.exists == false

    - name: Create the flag file
      file:
        path: "{{ ansible_flag_path }}"
        state: touch
      when: flag_file.stat.exists == false
    
    - name: Print link to local IP with port 5001
      ansible.builtin.debug:
        msg: "Dockge: http://{{ ansible_default_ipv4.address }}:5001"

  handlers:
    - name: Restart Docker
      systemd:
        name: docker
        state: restarted
      listen: "restart_docker"
